{
  "typeDocJsonParserVersion": "3.1.0",
  "id": 0,
  "name": "property-helpers",
  "version": "1.1.0",
  "readme": "<div align=\"center\">\n\n# Property Helpers\n\n**Simple helper functions for working with properties**\n\n[![GitHub](https://img.shields.io/github/license/RealShadowNova/property-helpers)](https://github.com/RealShadowNova/property-helpersblob/main/LICENSE.md)\n[![npm](https://img.shields.io/npm/v/property-helpers?color=crimson&logo=npm&style=flat-square)](https://www.npmjs.com/package/property-helpers)\n\n[![Support Server](https://discord.com/api/guilds/554742955898961930/embed.png?style=banner2)](https://discord.gg/fERY6AenEv)\n\n</div>\n\n---\n\n## Description\n\nProperty Helpers is a collection of helper functions for working with properties in objects and arrays.\n\n## Features\n\n- Written in TypeScript\n- Offers CommonJS, ESM, and UMD bundles\n- Fully tested\n- Extremely fast\n\n## Installation\n\n```bash\n# npm\nnpm install property-helpers\n# yarn\nyarn add property-helpers\n```\n\n## Documentation\n\n### deleteProperty\n\nA helper function to delete a property from an object or array at a path.\n\n```typescript\nexport function deleteProperty<T>(input: unknown, path: string[]): T;\n```\n\n---\n\n### getProperty\n\nA helper function to get a property from an object or array at a path.\n\n```typescript\nexport function getProperty<T = unknown>(input: unknown, path: string[], fallbackToInput = true): T | typeof PROPERTY_NOT_FOUND;\n```\n\n---\n\n### hasProperty\n\nA helper function to check if an object or array has a property at a path.\n\n```typescript\nexport function hasProperty(input: unknown, path: string[]): boolean;\n```\n\n---\n\n### setProperty\n\nA helper function to set a property on an object or array at a path.\n\n```typescript\nexport function setProperty<T>(input: unknown, path: string[], value: unknown): T;\n```\n\n---\n",
  "classes": [],
  "constants": [
    {
      "id": 12,
      "name": "PROPERTY_NOT_FOUND",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 3,
        "file": "getProperty.ts",
        "path": "lib",
        "url": "https://github.com/RealShadowNova/property-helpers/blob/e81a29d/src/lib/getProperty.ts#L3"
      },
      "external": false,
      "type": {
        "kind": "query",
        "query": {
          "kind": "reference",
          "id": 12,
          "name": "PROPERTY_NOT_FOUND",
          "packageName": null,
          "typeArguments": []
        }
      },
      "value": "..."
    }
  ],
  "enums": [],
  "functions": [
    {
      "id": 1,
      "name": "deleteProperty",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 12,
        "file": "deleteProperty.ts",
        "path": "lib",
        "url": "https://github.com/RealShadowNova/property-helpers/blob/e81a29d/src/lib/deleteProperty.ts#L12"
      },
      "external": false,
      "signatures": [
        {
          "id": 2,
          "name": "deleteProperty",
          "comment": {
            "description": "A helper function to delete a property from an object or array at a path.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              },
              {
                "name": "returns",
                "text": "The input object or array."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 3,
              "name": "T",
              "type": null,
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 4,
              "name": "input",
              "type": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            },
            {
              "id": 5,
              "name": "path",
              "type": {
                "kind": "array",
                "type": {
                  "kind": "intrinsic",
                  "type": "string"
                }
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": 3,
            "name": "T",
            "packageName": null,
            "typeArguments": []
          }
        }
      ]
    },
    {
      "id": 6,
      "name": "getProperty",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 13,
        "file": "getProperty.ts",
        "path": "lib",
        "url": "https://github.com/RealShadowNova/property-helpers/blob/e81a29d/src/lib/getProperty.ts#L13"
      },
      "external": false,
      "signatures": [
        {
          "id": 7,
          "name": "getProperty",
          "comment": {
            "description": "A helper function to get a property from an object or array at a path.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              },
              {
                "name": "returns",
                "text": "The property at the path or {@link PROPERTY_NOT_FOUND} if the property does not exist."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 8,
              "name": "T",
              "type": null,
              "default": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            }
          ],
          "parameters": [
            {
              "id": 9,
              "name": "input",
              "type": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            },
            {
              "id": 10,
              "name": "path",
              "type": {
                "kind": "array",
                "type": {
                  "kind": "intrinsic",
                  "type": "string"
                }
              }
            },
            {
              "id": 11,
              "name": "fallbackToInput",
              "type": {
                "kind": "intrinsic",
                "type": "boolean"
              }
            }
          ],
          "returnType": {
            "kind": "union",
            "types": [
              {
                "kind": "reference",
                "id": 8,
                "name": "T",
                "packageName": null,
                "typeArguments": []
              },
              {
                "kind": "query",
                "query": {
                  "kind": "reference",
                  "id": 12,
                  "name": "PROPERTY_NOT_FOUND",
                  "packageName": null,
                  "typeArguments": []
                }
              }
            ]
          }
        }
      ]
    },
    {
      "id": 13,
      "name": "hasProperty",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 10,
        "file": "hasProperty.ts",
        "path": "lib",
        "url": "https://github.com/RealShadowNova/property-helpers/blob/e81a29d/src/lib/hasProperty.ts#L10"
      },
      "external": false,
      "signatures": [
        {
          "id": 14,
          "name": "hasProperty",
          "comment": {
            "description": "A helper function to check if an object or array has a property at a path.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              },
              {
                "name": "returns",
                "text": "Whether the property at the path exists."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [],
          "parameters": [
            {
              "id": 15,
              "name": "input",
              "type": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            },
            {
              "id": 16,
              "name": "path",
              "type": {
                "kind": "array",
                "type": {
                  "kind": "intrinsic",
                  "type": "string"
                }
              }
            }
          ],
          "returnType": {
            "kind": "intrinsic",
            "type": "boolean"
          }
        }
      ]
    },
    {
      "id": 17,
      "name": "setProperty",
      "comment": {
        "description": null,
        "blockTags": [],
        "modifierTags": []
      },
      "source": {
        "line": 11,
        "file": "setProperty.ts",
        "path": "lib",
        "url": "https://github.com/RealShadowNova/property-helpers/blob/e81a29d/src/lib/setProperty.ts#L11"
      },
      "external": false,
      "signatures": [
        {
          "id": 18,
          "name": "setProperty",
          "comment": {
            "description": "A helper function to set a property on an object or array at a path.",
            "blockTags": [
              {
                "name": "since",
                "text": "1.0.0"
              },
              {
                "name": "returns",
                "text": "The input object or array."
              }
            ],
            "modifierTags": []
          },
          "typeParameters": [
            {
              "id": 19,
              "name": "T",
              "type": null,
              "default": null
            }
          ],
          "parameters": [
            {
              "id": 20,
              "name": "input",
              "type": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            },
            {
              "id": 21,
              "name": "path",
              "type": {
                "kind": "array",
                "type": {
                  "kind": "intrinsic",
                  "type": "string"
                }
              }
            },
            {
              "id": 22,
              "name": "value",
              "type": {
                "kind": "intrinsic",
                "type": "unknown"
              }
            }
          ],
          "returnType": {
            "kind": "reference",
            "id": 19,
            "name": "T",
            "packageName": null,
            "typeArguments": []
          }
        }
      ]
    }
  ],
  "interfaces": [],
  "namespaces": [],
  "typeAliases": []
}